#!/usr/bin/env python
# -*- coding: utf-8; -*-
#
# This file is part of SAMS.
#
# Copyright 2020 Sourcefabric z.u. and contributors.
#
# For the full copyright and license information, please see the
# AUTHORS and LICENSE files distributed with this source code, or
# at https://www.sourcefabric.org/superdesk/license

from sams_client.utils import schema_relation

ASSET_SCHEMA = {
    '_media_id': {
        'type': 'string'
    },
    '_created_by': {
        'type': 'string'
    },
    '_updated_by': {
        'type': 'string'
    },
    '_version': {
        'type': 'number'
    },
    'set_id': schema_relation('sets', required=True),
    'parent_id': schema_relation('assets'),
    'state': {
        'type': 'string',
        'allowed': ['draft', 'internal', 'public'],
        'default': 'draft',
        'nullable': False
    },
    'filename': {
        'type': 'string',
        'required': True
    },
    'length': {
        'type': 'number'
    },
    'mimetype': {
        'type': 'string'
    },
    'name': {
        'type': 'string'
    },
    'description': {
        'type': 'string'
    },
    'tags': {
        'type': 'list',
        'schema': {
            'type': 'dict',
            'allow_unknown': True,
            'schema': {
                'code': {
                    'type': 'string',
                    'required': True
                },
                'name': {
                    'type': 'string'
                }
            }
        }
    },
    'extra': {
        'type': 'dict',
        'schema': {},
        'allow_unknown': True
    }
}
"""
**Schema** =
    ``_id`` *bson.objectid.ObjectId*
        Globally unique id, generated automatically by the system
    ``_media_id`` *string*
        Globally unique id for the asset binary. This ID is generated by the StorageProvider
    ``_created_by`` *string*
        A field to store the id of the user who uploaded the asset
    ``_updated_by`` *string*
        A field to store the id of the user who updated the asset
    ``_version`` *int*
        An auto-incrementing version field
    ``set_id`` *bson.objectid.ObjectId*
        The ID of the Set where the Asset is to be stored
    ``parent_id`` *bson.objectid.ObjectId*
        An optional ID of a parent Asset
    ``state`` *string*
        The state of the Asset (defaults to ``draft``). Can be one of ``draft``, ``internal`` or ``public``
    ``filename`` *string*
        The file name of the Asset Binary
    ``length`` *int*
        The size in bytes of the Asset Binary (calculated by the service)
    ``mimetype`` *string*
        The mimetype of the Asset Binary (calculated by the service)
    ``name`` *string*
        A name to give to the Asset
    ``description`` *string*
        A short description describing the Asset
    ``tags`` *list[dict]*
        A list of code/name combinations so Assets can be grouped together through tags
    ``extra`` *dict*
        An extra dictionary to store further information about the Asset
    ``binary`` *io.BytesIO*
        A special case attribute containing the actual binary data to be uploaded.
        This attribute will be removed from the metadata document before saving/updating
"""
